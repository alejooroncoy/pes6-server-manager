---
import config from "../../config";

interface ResponseServers {
  error?: any;
  data: DataServer[];
  count?: any;
  status: number;
  statusText: string;
}

type DataServer = {
  name: string;
  created_at: string;
  status: string;
  description: string;
  id: number;
  urlHost: string;
  img: string;
  urlHome: string;
};

const response = await fetch(`${config.baseUrlBackend}/server/list`);
const { data: servers }: ResponseServers = await response.json();
---

<section id="servers" class="py-4 bg-gray-100 pt-20">
  <div class="py-4 flex flex-col gap-12 items-center justify-center">
    <h2 class="text-3xl md:text-5xl font-extrabold text-primary">
      Servers availables
    </h2>
    <ul
      class="w-full p-0 m-0 flex gap-8 flex-col sm:flex-wrap sm:flex-row justify-center items-center"
    >
      {
        servers
          .filter(({ status }) => status === "working")
          .map(({ img, urlHome, name }) => (
            <a
              target="_blank"
              rel="noopener noreferrer"
              class="menu__link"
              href={urlHome}
            >
              <img
                id={
                  (name === "brasil_server" && "pes6BrasilServer") || undefined
                }
                class:list={[
                  "menu__link__img",
                  name === "brasil_server" ? "p-4 rounded" : "",
                  name === "ps2" || name === "indie" ? "w-36 md:w-60" : "",
                ]}
                alt="Pes6.es logo"
                src={img}
                width="auto"
                height="auto"
              />
            </a>
          ))
      }
    </ul>
  </div>
</section>

<style>
  .menu__link__img {
    @apply w-56 grayscale transition-all ease-linear duration-200 hover:grayscale-0 hover:scale-105 md:w-80;
  }
</style>

<script src="../../scripts/homeServers.js"></script>
